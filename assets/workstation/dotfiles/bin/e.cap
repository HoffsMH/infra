#!/bin/bash

set -e

source $HOME/.envrc

# Function for displaying help
function display_help() {
    echo "Usage: $0 [options...] arguments"
    echo
    echo "  -n [value]   Show the most recent [value] number of files (default 5)"
    echo "  -f [string]  Show all files whose filenames match [string]"
    echo "  -s [string]  Show all files whose contents match [string]"
    echo "  -h           Display this help message"
    echo
    echo "The default directory is the cap root directory"
    exit 1
}

if [ -f "$CAP_FILE" ]; then
  ~/bin/cap.sync
fi

# use cases
# I want to see the x most recent in a given dir
# I want to see all files everywhere whose filenames match
# I want to see all files everywhere whose contents match


# x files This is an option (default 5) -n
# match filenames This is an option -f
# match contents This is an option -s
#
# In a given subdir This is the arg (default is cap root)

# Initialize variables for flags
flagN=5
flagF=.
flagS=0

# Iterate over all inputs
while (( "$#" )); do
  case "$1" in
    -n)
     if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        flagN=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -f)
     if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        flagF=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -s)
     if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        flagS=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -h)
      display_help
      exit 0;
      ;;
    --) # End of all options
      shift
      break
      ;;
    -*|--*=) # Unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # Preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done

# Set positional arguments in their proper place
eval set -- "$PARAMS"

# echo "flagA: $flagA"
# echo "flagB: $flagB"
# echo "Positional parameters: $@"

# ~/bin/cap.dedup-links


if [ "$flagS" != 0 ]; then
  file_list=$(rg -l "$flagS" $CAP_DIR/$@ | convert-relative $CAP_DIR | tail -n "$flagN")
else
  pushd $CAP_DIR > /dev/null
    file_list=$(fd "$flagF.**\.md$" --regex -tf --base-directory="$CAP_DIR" --max-depth=1 $1 | tail -n "$flagN")
  popd > /dev/null
fi

while IFS= read -r file; do
  echo "$file" | hcat "$CAP_DIR" >> $CAP_FILE
done <<< "$file_list"

~/bin/nvim.cap
