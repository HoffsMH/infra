#! /bin/zsh

"$HOME/infra/assets/workstation/dotfiles/bin/install.packer-nvim"

set -e

#speed up aur makepkg
sudo sed -i '/MAKEFLAGS=/c\MAKEFLAGS="-j$(nproc)"' /etc/makepkg.conf
sudo sed 's/COMPRESSXZ=(xz -c -z -)/COMPRESSXZ=(xz -T 0 -c -z -)/' /etc/makepkg.conf

echo "###############################################"
echo "YAY MINIMAL"
echo "###############################################"

installs=(
    "arandr" # arranging screens and saving screen configs
    "autoconf" # automatically rearrange screens when plugging in monitors
    "autorandr" # automatically rearrange screens when plugging in monitors

    "cronie" # cront implementation that includes anacron
    "direnv" # env var management
    "dnsutils" # dig
    "dunst" # notifications
    "gnutls"
    "inotify-tools"
    "jq" # command line json parser
    "kitty"
    "libinput" # synaptics
    "libratbag" # gaming mice configuration
    "light" # backlight and keyboard like control for laptops
    "mediainfo"
    "ncurses5-compat-libs"
    "neovim"
    "net-tools" # for netstat
    "ntp"
    "openssh"
    "pfetch" # simple screen fetch
    "pinentry-dispatch"
    "pinentry-git"
    "polkit"
    "pulseaudio-alsa"
    "pulseaudio-bluetooth"
    "pulsemixer" # mixer and volume control
    "resolvconf"
    "restic" # remote backup
    "sshpass"
    "stalonetray"
    "thunar"
    # "tlp" # plug and play battery saving
    # "tlpui" # plug and play battery saving
    "udisks2" # personal drive mounting system that doesn't require sudo
    "xcape"
    "xclip" # clipboard command interface
    "xcursor-breeze"
    "xdotool"
    "xorg-font-util"
    "xorg-fonts-encodings"
    "xorg-server"
    "xorg-xclipboard"
    "xorg-xev" # x event
    "xorg-xinit"
    "xorg-xinput" # adjusting touchpad settings
    "zip"
    "zstd" # facebooks compression
)

sudo pacman -Syu
yay -Syu

echo $installs
for i in $installs
do
  echo "###############################################"
  echo "INSTALLING $i"
  echo "###############################################"

  if (time yay -S --noconfirm "$i" 2>&1 ) 2>> ~/.install.all.report ; then
    echo "###############################################"
    echo "SUCCEEDED $i"
    echo "###############################################"
    echo "$i succeeded" >> ~/.install.all.report
  else
    echo "###############################################"
    echo "FAILED $i"
    echo "###############################################"
    echo "- $i\n" >> "$HOME/failures.md"
    echo "$i failed" >> ~/.install.all.report
  fi
done

echo "###############################################"
echo "enable services"
echo "###############################################"


sudo systemctl enable "syncthing@$USER.service" || echo "syncthing service not found" >> ~/.install.all.report
sudo systemctl start "syncthing@$USER.service" || echo "starting syncthing failed" >> ~/.install.all.report


sudo systemctl enable "cpupower" || echo "cpupower service not found" >> ~/.install.all.report
sudo systemctl start "cpupower" || echo "starting cpupower failed" >> ~/.install.all.report


sudo systemctl enable "tlp" || echo "tlp service not found" >> ~/.install.all.report
sudo systemctl start "tlp" || echo "starting tlp service failed" >> ~/.install.all.report


# use dunst for notifications
systemctl disable --user xfce4-notifyd.service || echo "stock notifications already uninstalled" >> ~/.install.all.report
systemctl stop --user xfce4-notifyd.service || echo "stock notifications already stopped" >> ~/.install.all.report
systemctl enable --user dunst.service || echo "dunst service not found" >> ~/.install.all.report
systemctl start --user dunst.service || echo "starting dunst failed" >> ~/.install.all.report

sudo systemctl enable "pcscd.service" || echo "yubikey daemon(pcscd) not found" >> ~/.install.all.report
sudo systemctl start "pcscd.service"|| echo "starting yubikey daemon(pcscd) failed" >> ~/.install.all.report

"$HOME/infra/assets/workstation/dotfiles/bin/install.asdf"
"$HOME/infra/assets/workstation/dotfiles/bin/install.go-utils"
"$HOME/infra/assets/workstation/dotfiles/bin/install.zsh-extra"
"$HOME/infra/assets/workstation/dotfiles/bin/install.dmenu"
"$HOME/infra/assets/workstation/dotfiles/bin/install.paru"

