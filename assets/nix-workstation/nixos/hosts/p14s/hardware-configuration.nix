# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d1523560-f16f-4da7-a7e9-6c9747029763";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-78a89e8c-d9f3-498f-b9b2-4a4b6494aaa9".device = "/dev/disk/by-uuid/78a89e8c-d9f3-498f-b9b2-4a4b6494aaa9";
  boot.initrd.luks.devices."luks-ac9ee183-a857-4379-b716-49d3966f3220".device = "/dev/disk/by-uuid/ac9ee183-a857-4379-b716-49d3966f3220";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4ECE-B46D";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/6920459a-72dd-4052-828e-bea4b9022357"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
