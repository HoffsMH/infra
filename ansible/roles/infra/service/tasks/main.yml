---
- name: "cleanup dir"
  file:
    path: /infra
    state: absent

- name: pull down latest infra
  git:
    repo: 'https://github.com/HoffsMH/infra.git'
    dest: "/infra"
    force: yes
    version: master

- name: check if docker file exists
  stat:
    path: /infra/assets/container/{{ service_name }}/Dockerfile
  register: dockerfile_present

- name: build docker
  command:
    cmd: "docker build /infra/assets/container/{{ service_name }} -t {{ service_name }}"
  when: dockerfile_present.stat.exists
  retries: 5
  delay: 5

- name: check if env file  exists
  stat:
    # a little weird that we are checking for it on the remote host but it works
    path: /infra/assets/container/{{ service_name }}/env.j2
  register: env_file

- name: "convert .env template"
  template:
    src: "../../../assets/container/{{ service_name }}/.env.j2"
    dest: "/infra/assets/container/{{ service_name }}/.env"
    mode: 0644
  when: env_file.stat.exists

- name: "place service file"
  copy:
    remote_src: true
    src: "/infra/assets/container/{{ service_name }}/service"
    dest: "/etc/systemd/system/docker-{{ service_name }}.service"
    mode: 0644
    force: true

- name: reload systemctl after putting in new service file
  command:
    cmd: "systemctl daemon-reload"

- name: reset failed
  command:
    cmd: "systemctl reset-failed"

- name: Start and enable service
  service:
    name: docker-{{ service_name }}
    state: restarted
    enabled: true

- name: check if afterbuild file exists
  stat:
    path: /infra/assets/container/{{ service_name }}/afterbuild
  register: afterbuild_present

- name: Sleep for 300 seconds and continue with play
  wait_for:
    timeout: 300

- name: "ensure minutely retry"
  vars:
    job: "systemctl start docker-{{ service_name }}"
    cadence: "* * * * *"
    dest: "/etc/cron.d/service-start"
  include_role:
    name: ../../roles/common/has-cron-job

- name: execute afterbuild
  command:
    cmd: "/infra/assets/container/{{ service_name }}/afterbuild"
  when: afterbuild_present.stat.exists
